//class: nh∆∞ l√† b·∫£n thi·∫øt k·∫ø
//object: ƒë∆∞·ª£c t·∫°o t·ª´ class, l√† 1 instance c·ªßa class

// class NYC { // ƒë√¢y l√† class
//     name; //ƒë√¢y l√† c√°c object
//     age;
//     sex; 
//     address;

//     constructor(name, age, sex, address) { 
//         console.log ('ƒê·ªëi t∆∞·ª£ng ƒë∆∞·ª£c kh·ªüi t·∫°o v·ªõi d·ªØ li·ªáu: ')
//         console.log (name, sex, age, address);
//         this.name = name; //this ·ªü ƒë√¢y l√† ƒë·ªëi t∆∞·ª£ng ƒë∆∞·ª£c kh·ªüi t·∫°o, this ·ªü ƒë√¢y tr·ªè v√†o c√°c object ·ªü trong class
//         this.age = age;
//         this.address = address;
//         this.sex = sex;
//     }

//     cheat() {
//         console.log ("V·ª´a ƒë√° xong üòÅ")
//     }

//     comeback() {
//         console.log ('Quay l·∫°i nh·ªõ üòÅ')
//     }

// }

// let nyc1 = new NYC('A', '20', 'Female', 'TB'); //g·ªçi new ... ch√≠nh l√† g·ªçi constructor, hay new NYC() kia ch√≠nh l√† constructor, constructor kia c≈©ng nh∆∞ 1 function
// nyc1.cheat(); //ƒë√¢y l√† g·ªçi ph∆∞∆°ng th·ª©c ·ªü trong 1 object
// console.log (nyc1);






// class Crush {
//     name;
//     age;
//     appearance;
//     weight;
//     height;
//     address;

//     constructor (name, age, appearance, weight, height, address) {
//         this.name = name;
//         this.age = age;
//         this.appearance = appearance;
//         this.weight = weight;
//         this.height = height;
//         this.address = address;
//     }
// }
// console.log ('ƒê·ªëi t∆∞·ª£ng ƒë∆∞·ª£c kh·ªüi t·∫°o: ');
// var crush1 = new Crush('L', '20', 'Xinh', '45kg', '1m59', 'Nƒê');
// var crush2 = new Crush('N', '19', 'Xinh', '41kg', '1m45', 'Nƒê'); //c√°c gi√° tr·ªã ·ªü ƒë√¢y s·∫Ω truy·ªÅn l·∫ßn l∆∞·ª£t v√†o t·ª´ng object
// var crush3 = new Crush('ƒê', '18', 'X·∫•u', '42kg', '1m50', 'HN');
// var crush4 = new Crush('H', '17', 'Xinh', '40kg', '1m44', 'HP');
// var crush5 = new Crush('B', '16', 'Xinh', '45kg', '1m49', 'Nƒê');
// console.log (crush1);
// console.log (crush2);
// console.log (crush3);
// console.log (crush4);
// console.log (crush5);
// ƒë√¢y l√† v√≠ d·ª• v·ªÅ Object v√† Class

// class Boy {
//     name;
//     age;
//     handsome;
//     f = [
//         'play game',
//         'music',
//         'girl',
//     ];
//     get favorite() { //getter ph·∫£i ƒëi li·ªÅn v·ªõi 1 thu·ªôc t√≠nh (·ªü ƒë√¢y l√† thu·ªôc t√≠nh "f")
//         return this.f;
//     }

//     set favorite(value) { //setter th√¨ ch·ªâ c√≥ duy nh·∫•t 1 tham s·ªë
//         this.f = value;
//     }
//     constructor (name, age) {
//         this.name = name;
//         this.age = age;
//     }

//     playGame() {
//         console.log ("Ch∆°i game")
//     }
// }

// class GoodBoy extends Boy { //ƒë√¢y l√† class GoodBoy s·∫Ω k·∫ø th·ª´a nh·ªØng thu·ªôc t√≠nh v√† ph∆∞∆°ng th·ª©c c·ªßa class Boy (v·ªõi extends)
//     cooking;
//     constructor(name, age, cooking) {
//         super(name, age); //ƒë√¢y l√† g·ªçi ph∆∞∆°ng th·ª©c kh·ªüi t·∫°o c·ªßa th·∫±ng "cha"
//         delete this.handsome; //ƒë√¢y l√† x√≥a ƒëi 1 thu·ªôc t√≠nh m√† kh√¥ng mu·ªën k·∫ø th·ª´a t·ª´ th·∫±ng "cha"
//         this.cooking = cooking;
//     }

//     takeCare() {
//         console.log("Quan t√¢m chƒÉm s√≥c");
//     }
// }

// class BadBoy extends Boy {
//     rich;
//     constructor (name, age, rich) {
//         super (name, age);
//         this.rich = rich;
//     }
// }

// var Dang = new GoodBoy('Dang', 20, 'master chief');
// var BB1 = new BadBoy('BB1', 18, 'rich');
// var chinh = new Boy('Do Chinh', 23);
// Dang.playGame(); //playGame() n·∫±m trong class Boy n√™n bi·∫øn Dang n·∫±m trong Goodboy s·∫Ω k·∫ø th·ª´a ƒë∆∞·ª£c
// console.log(Dang.favorite);
// Dang.favorite = ['ph∆∞·ª£t', 'ƒë·ªçc s√°ch']; //setter v√† getter




// class Calculator {
//     static sum (a,b) {
//         return a + b;
//     }

//     static subtract (a,b) { //subtract () {} ƒë∆∞·ª£c g·ªçi l√† ph∆∞∆°ng th·ª©c
//         return a - b;
//     }

//     static multiply (a,b) {
//         return a * b;
//     }

//      power (a,b) {
//         return a ** b;
//     }
// }
// var c1 = new Calculator();
// c1.sum (1, 10); //n·∫øu kh√¥ng d√πng static th√¨ ph·∫£i l√†m nh∆∞ 2 d√≤ng n√†y
// Calculator.sum (1,10);
// Calculator.subtract (2, 3); 

//static m√† ƒëi v·ªõi thu·ªôc t√≠nh th√¨ s·∫Ω l√† thu·ªôc t√≠nh c·ªßa class, c√≤n ƒëi v·ªõi ph∆∞∆°ng th·ª©c th√¨ s·∫Ω l√† ph∆∞∆°ng th·ª©c c·ªßa class
//non-static m√† ƒëi v·ªõi thu·ªôc t√≠nh th√¨ s·∫Ω l√† thu·ªôc t√≠nh c·ªßa object, c√≤n ƒëi v·ªõi ph∆∞∆°ng th·ª©c th√¨ s·∫Ω l√† ph∆∞∆°ng th·ª©c c·ªßa object
//class ... l√† t√™n class, ...; l√† thu·ªôc t√≠nh, ...() {} l√† ph∆∞∆°ng th·ª©c

class Animal {
    name;
    leg;
    sound;
    constructor (name, leg, sound) {
        this.name = name;
        this.leg = leg;
        this.sound = sound;
    }
}

class Reptile extends Animal {
    weight;
    length;
    constructor (name, leg, sound, weight, length) {
        super (name, leg, sound);
        this.weight = weight;
        this.length = length;
    }
    speak() {
        console.log ('N√≥ k√™u: ' + this.sound);
    }
}

class Mammal extends Animal {
    furColor;
    constructor (name, leg, sound, furColor) {
        super (name, leg, sound);
        this.furColor = furColor;
    }
}

class Dog extends Mammal {
    constructor (furColor, name) {
        super (name, 4, 'g√¢u g√¢u', furColor);
    }
    bite() {
        console.log ("√îi kh√¥ng, ch√≥ c·∫Øn")
    }
}

var Pitbull = new Dog('L√¥ng v√†ng', 'Pitbull', '4 ch√¢n', 'G√¢u g√¢u');
var thachsung = new Reptile('Th·∫°ch s√πng', '4 ch√¢n', 'ch√†nh ch·∫°ch', '20g', '20cm');
console.log (thachsung);
console.log (Pitbull);
Pitbull.bite();
thachsung.speak();